DROP DATABASE IF EXISTS envios_paquetes;
-- Crear la base de datos
CREATE DATABASE envios_paquetes;
USE envios_paquetes;

-- Crear la tabla Sucursal
CREATE TABLE SUCURSAL (
    COD_SUCURSAL INT NOT NULL PRIMARY KEY,
    DIRECCION VARCHAR(100),
    TELEFONOS VARCHAR(20)
);

-- Crear la tabla Empleado
CREATE TABLE EMPLEADO (
    COD_EMPLEADO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    COD_SUCURSAL INT,
    NOMBRE VARCHAR(100) DEFAULT 'EMPLEADO SIN NOMBRE',
    APELLIDO VARCHAR(100),
    DOMICILIO VARCHAR(100),
    TELEFONOS VARCHAR(20)
);

-- Crear la tabla Automovil
CREATE TABLE AUTOMOVIL (
    COD_AUTOMOVIL INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    COD_SUCURSAL INT,
    COD_EMPLEADO INT,
    PATENTE VARCHAR(20),
    MODELO VARCHAR(100)    
);

-- Crear la tabla Cliente
CREATE TABLE CLIENTE (
    COD_CLIENTE INT NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(100),
    APELLIDO VARCHAR(100),
    DOMICILIO VARCHAR(100),
    TELEFONOS VARCHAR(20)
);

-- Crear la tabla Paquete
CREATE TABLE PAQUETE (
    COD_PAQUETE INT NOT NULL PRIMARY KEY,
    COD_CLIENTE INT,
    COD_EMPLEADO INT,
    FECHA_ENVIO DATE,
    ESTADO BOOLEAN
  );

-- Crear la tabla Producto
CREATE TABLE PRODUCTO (
    COD_PRODUCTO INT NOT NULL PRIMARY KEY,
    COD_PAQUETE INT,
    NOMBRE VARCHAR(100),
    DESCRIPCION VARCHAR(255),
    PESO DECIMAL(10 , 2 ),
    PRECIO DECIMAL(10 , 2 )
   );

ALTER TABLE PRODUCTO
	ADD CONSTRAINT FK_PRODUCTO_PAQUETE
    FOREIGN KEY (COD_PAQUETE) REFERENCES PAQUETE (COD_PAQUETE);

-- FOREIGN KEYS DEFINITION
ALTER TABLE EMPLEADO
	ADD CONSTRAINT FK_EMP_SUCURSAL
    FOREIGN KEY (COD_SUCURSAL) REFERENCES SUCURSAL(COD_SUCURSAL); 
    
ALTER TABLE AUTOMOVIL
	ADD CONSTRAINT FK_AUTO_SUCURSAL
	FOREIGN KEY (COD_SUCURSAL) REFERENCES SUCURSAL (cod_sucursal);
    
ALTER TABLE AUTOMOVIL
	ADD CONSTRAINT FK_AUTO_EMPLEADO
	FOREIGN KEY (COD_EMPLEADO) REFERENCES EMPLEADO (COD_EMPLEADO);
    
ALTER TABLE PAQUETE
	ADD CONSTRAINT FK_PAQUETE_CLIENTE
	FOREIGN KEY (COD_CLIENTE) REFERENCES CLIENTE (COD_CLIENTE);
    
ALTER TABLE PAQUETE
	ADD CONSTRAINT FK_PAQUETE_EMPLEADO
	FOREIGN KEY (COD_EMPLEADO) REFERENCES EMPLEADO (COD_EMPLEADO);
    
INSERT INTO SUCURSAL (COD_SUCURSAL, DIRECCION, TELEFONOS) VALUES
(1, 'Calle 123, Ciudad X', '123456789'),
(2, 'Avenida Principal, Ciudad Y', '987654321'),
(3, 'Calle Central, Ciudad Z', '111222333');

INSERT INTO EMPLEADO (COD_SUCURSAL, NOMBRE, APELLIDO, DOMICILIO, TELEFONOS) VALUES
(1, 'Juan', 'Perez', 'Calle 456, Ciudad X', '987654321'),
(1, 'Maria', 'Gomez', 'Calle 789, Ciudad X', '123456789'),
(2, 'Pedro', 'Martinez', 'Avenida Secundaria, Ciudad Y', '654987321'),
(2, 'Laura', 'Lopez', 'Calle 567, Ciudad Y', '789123456'),
(3, 'Ana', 'Garcia', 'Calle 890, Ciudad Z', '456789123');

INSERT INTO AUTOMOVIL (COD_SUCURSAL, PATENTE, MODELO) VALUES
(1, 'ABC123', 'Toyota Corolla'),
(1, 'XYZ789', 'Ford Fiesta'),
(2, 'DEF456', 'Chevrolet Aveo'),
(3, 'GHI789', 'Nissan Sentra');

INSERT INTO CLIENTE (COD_CLIENTE, NOMBRE, APELLIDO, DOMICILIO, TELEFONOS) VALUES
(1, 'Carlos', 'Lopez', 'Calle Principal, Ciudad Z', '987654321'),
(2, 'Ana', 'Garcia', 'Avenida Central, Ciudad W', '123456789'),
(3, 'Roberto', 'Martinez', 'Avenida Sur, Ciudad X', '789456123');

INSERT INTO PAQUETE (COD_PAQUETE, COD_CLIENTE, COD_EMPLEADO, FECHA_ENVIO, ESTADO) VALUES
(1, 1, 1, '2024-03-01', 1),
(2, 2, 2, '2024-03-02', 1),
(3, 3, 3, '2024-03-03', 1);

INSERT INTO PRODUCTO (COD_PRODUCTO, COD_PAQUETE, NOMBRE, DESCRIPCION, PESO, PRECIO) VALUES
(1, 1, 'Libro', 'Novela de ficción', 0.5, 20.99),
(2, 1, 'Camiseta', 'Talla M, color rojo', 0.3, 15.50),
(3, 2, 'Zapatos', 'Zapatos deportivos, talla 8', 0.7, 50.00),
(4, 3, 'Teléfono', 'Smartphone de última generación', 0.4, 600.00);


-- saber que empleados trabajan en cada sucursal
SELECT S.DIRECCION AS DIRECCION_SUCURSAL, E.NOMBRE AS NOMBRE_EMPLEADO, E.APELLIDO AS APELLIDO_EMPLEADO
FROM SUCURSAL S
INNER JOIN EMPLEADO E ON S.COD_SUCURSAL = E.COD_SUCURSAL
ORDER BY S.COD_SUCURSAL, E.COD_EMPLEADO;

-- saber que compro cada cliente
SELECT C.NOMBRE AS NOMBRE_CLIENTE, C.APELLIDO AS APELLIDO_CLIENTE, PR.NOMBRE AS NOMBRE_PRODUCTO, PR.DESCRIPCION, PR.PESO, PR.PRECIO
FROM CLIENTE C
INNER JOIN PAQUETE P ON C.COD_CLIENTE = P.COD_CLIENTE
INNER JOIN PRODUCTO PR ON P.COD_PAQUETE = PR.COD_PAQUETE
ORDER BY C.COD_CLIENTE, P.COD_PAQUETE, PR.COD_PRODUCTO;

-- saber el estado de la entrega, los datos del empleado y cliente
SELECT C.NOMBRE AS NOMBRE_CLIENTE, E.NOMBRE AS NOMBRE_EMPLEADO,
       CASE 
           WHEN PA.ESTADO = 1 THEN 'Entregado'
           ELSE 'No entregado'
       END AS ESTADO_ENTREGA
FROM EMPLEADO E
JOIN PAQUETE PA ON E.COD_EMPLEADO = PA.COD_EMPLEADO
JOIN CLIENTE C ON PA.COD_CLIENTE = C.COD_CLIENTE
WHERE E.COD_EMPLEADO = 1;


